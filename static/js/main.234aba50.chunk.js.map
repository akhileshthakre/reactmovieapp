{"version":3,"sources":["GlobalStyle.js","images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.Styles.js","components/Header/Header.js","config.js","components/HeroImage/HeroImage.Styles.js","components/HeroImage/HeroImage.js","components/Grid/Grid.Styles.js","components/Grid/Grid.js","components/Thumb/Thumb.Styles.js","components/Thumb/Thumb.js","components/Spinner/Spinner.js","components/Spinner/Spinner.Styles.js","images/search-icon.svg","components/SearchBar/SearchBar.Styles.js","components/SearchBar/SearchBar.js","components/Button/Button.Styles.js","components/Button/Button.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.Styles.js","components/BreadCrumb/BreadCrumb.js","components/MovieInfo/MovieInfo.Styles.js","components/MovieInfo/MovieInfo.js","components/MovieInfoBar/MovieInfoBar.Styles.js","components/MovieInfoBar/MovieInfoBar.js","components/Actors/Actors.Styles.js","components/Actors/Actors.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","props","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","totat_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actors","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.234aba50.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --maxWidth: 1280px;\n    --white: #fff;\n    --lightGrey: #eee;\n    --medGrey: #353535;\n    --darkGrey: #1c1c1c;\n    --fontSuperBig: 2.5rem;\n    --fontBig: 1.5rem;\n    --fontMed: 1.2rem;\n    --fontSmall: 1rem;\n  }\n  * {\n    box-sizing: border-box;\n    font-family: 'Abel', sans-serif;\n  }\n  body {\n    margin: 0;\n    padding: 0;\n    \n    h1 {\n      font-size: 2rem;\n      font-weight: 600;\n      color: var(--white);\n    }\n    h3 {\n      font-size: 1.1rem;\n      font-weight: 600;\n    }\n    p {\n      font-size: 1rem;\n      color: var(--white);\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    background: var(--darkGrey);\n    padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    max-width: var(--maxWidth);\n    padding: 20px 0;\n    margin: 0 auto;\n\n`;\n\nexport const LogoImg = styled.img`\n    width: 200px;\n    @media screen and (max-width: 500px) {\n        width:150px;\n    }\n`;\n\nexport const TMDBLogoImg = styled.img`\n    width: 100px;\n\n    @media screen and (max-width: 500px) {\n        width: 80px;\n    }\n`;  ","import { Link } from 'react-router-dom'\nimport RMDBLogo from '../../images/react-movie-logo.svg';\nimport TMDBLogo from '../../images/tmdb_logo.svg';\nimport { Wrapper,Content,LogoImg,TMDBLogoImg } from './Header.Styles';\n\n\nconst Header = () => {\n    return (\n    <Wrapper>\n        <Content>\n            <Link to='/'>\n                <LogoImg src={RMDBLogo} alt='rmdb-logo' />\n            </Link>\n            <TMDBLogoImg src={TMDBLogo} alt='tmdb-logo' />\n        </Content>\n    </Wrapper>\n    )\n}\n\nexport default Header;","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: ${(props) =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), var(--darkGrey)`};\n  background-size: 100%, cover;\n  background-position: center;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  padding: 20px;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n  z-index: 100;\n  max-width: 700px;\n  position: absolute;\n  bottom: 40px;\n  margin-right: 20px;\n  min-height: 100px;\n  color: var(--white);\n  h1 {\n    font-size: var(--fontSuperBig);\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontBig);\n    }\n  }\n  p {\n    font-size: var(--fontMed);\n  \n    @media screen and (max-width: 720px) {\n      font-size: var(--fontSmall);\n    }\n  }\n  @media screen and (max-width: 720px) {\n    max-width: 100%;\n  }\n`;","//Styles\nimport { Wrapper,Content,Text } from \"./HeroImage.Styles\";\n\n\nconst HeroImage = ({image,title,text}) => {\n    return(\n        <Wrapper image={image}>\n\n            <Content>\n                <Text>\n                    <h1>{title}</h1>\n                    <p>{text}</p>\n                </Text>\n            </Content>\n\n        </Wrapper>\n    )\n}\n\nexport default HeroImage","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    color: var(--medGrey);\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 2rem;\n`;\n","//Styles\nimport { Wrapper, Content } from \"./Grid.Styles\";\n\nconst Grid = ({header, children}) => {\n    return(\n        <Wrapper>\n            <h1>{header}</h1>\n            <Content>{children}</Content>\n        </Wrapper>\n    )\n}\n\nexport default Grid","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 100%;\n  max-width: 720px;\n  transition: all 0.3s;\n  object-fit: cover;\n  border-radius: 20px;\n  animation: animateThumb 0.5s;\n  :hover {\n    opacity: 0.8;\n  }\n  @keyframes animateThumb {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;","//Styles\nimport { Image } from \"./Thumb.Styles\";\nimport { Link } from \"react-router-dom\";\n\nconst Thumb = ({image, movieId, clickable}) => (\n    <div>\n        {clickable ? (\n            <Link to={`/${movieId}`}>\n                <Image src={image} alt=\"movie-thumb\" />\n            </Link>\n        ) : (\n            <Image src={image} alt=\"movie-thumb\" />\n        )}\n        \n    </div>\n)\n\nexport default Thumb","import  { Spinner}  from './Spinner.Styles'\n\nexport default Spinner","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n  border: 5px solid var(--lightGrey); \n  border-top: 5px solid var(--medGrey);\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  max-width: var(--maxWidth);\n  width: 100%;\n  height: 55px;\n  background: var(--medGrey);\n  margin: 0 auto;\n  border-radius: 40px;\n  color: var(--white);\n  img {\n    position: absolute;\n    left: 15px;\n    top: 14px;\n    width: 30px;\n  }\n  input {\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: var(--white);\n    :focus {\n      outline: none;\n    }\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;","import { useState, useEffect, useRef } from 'react'\n//searchicon\nimport searchIcon from '../../images/search-icon.svg'\n//Styles\nimport { Wrapper, Content } from './SearchBar.Styles'\n\n\nconst SearchBar = ({setSearchTerm}) => {\n\n    const [state, setState] = useState('')\n    const initial = useRef(true)\n\n\n    useEffect(() => {\n        if(initial.current) {\n            initial.current = false\n            return\n        }\n\n        const timer = setTimeout(() => {\n            setSearchTerm(state)\n        },500)\n\n        return () => clearTimeout(timer)\n    },[setSearchTerm, state])\n\n    return(\n        <Wrapper>\n            <Content>\n                <img src={searchIcon} alt='search-icon' />\n                <input type='text' \n                placeholder='Search Movie'\n                onChange={event => setState(event.currentTarget.value)}\n                value={state}\n                \n                />\n\n            </Content>\n        </Wrapper>\n    )\n}\n\nexport default SearchBar","import styled from 'styled-components';\n\nexport const Wrapper = styled.button`\n  display: block;\n  background: var(--darkGrey);\n  width: 25%;\n  min-width: 200px;\n  height: 60px;\n  border-radius: 30px;\n  color: var(--white);\n  border: 0;\n  font-size: var(--fontBig);\n  margin: 20px auto;\n  transition: all 0.3s;\n  outline: none;\n  cursor: pointer;\n  :hover {\n    opacity: 0.8;\n  }\n`;","import { Wrapper } from './Button.Styles'\n\nconst Button = ( {text, callback}) => {\n    return(\n    <Wrapper type='button' onClick={callback}>\n        {text}\n    </Wrapper>\n    )\n}\n\nexport default Button","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = stateName => {\n  const sessionState = sessionStorage.getItem(stateName)\n  return sessionState && JSON.parse(sessionState)\n}","import { useState, useEffect } from \"react\"\n//API\nimport API from '../API'\n\n//Helpers\nimport { isPersistedState } from \"../helpers\"\n\nconst initialState = {\n    page:0,\n    results:[],\n    total_pages:0,\n    totat_results:0\n}\n\nexport const useHomeFetch = () => {\n    const [searchTerm, setSearchTerm] = useState('')\n    const [state,setState] = useState(initialState)\n    const [loading, setLoading] = useState(false)\n    const [error,setError] = useState(false)\n    const [isLoadingMore, setIsLoadingMore] = useState(false)\n\n    const fetchMovies = async (page, searchTerm = \"\") => {\n        try{\n            setError(false)\n            setLoading(true)\n\n            const movies = await API.fetchMovies(searchTerm, page)\n            \n            setState(prev => ({\n                ...movies,\n                results:\n                    page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n            }))\n            \n        }catch(error) {\n            setError(true)\n        }\n        setLoading(false)\n    }\n    // initial and search\n    useEffect(() => {\n\n        if(!searchTerm) {\n            const sessionState = isPersistedState('homeState')\n\n            if(sessionState) {\n                setState(sessionState)\n                return\n            }\n        }\n\n        setState(initialState)\n        fetchMovies(1,searchTerm)\n    }, [searchTerm])\n\n    //Load More\n    useEffect(() => {\n        if(!isLoadingMore) return\n        fetchMovies(state.page +1, searchTerm)\n        setIsLoadingMore(false)\n    },[isLoadingMore,searchTerm,state.page])\n\n\n    //Write to SessionStorage\n    useEffect(() => {\n        if(!searchTerm) sessionStorage.setItem('homeState', JSON.stringify(state) )\n    },[searchTerm,state])\n\n    return { state, loading, error,setSearchTerm,setIsLoadingMore}\n} ","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","//Config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config'\n \n//Components\nimport HeroImage from './HeroImage/HeroImage'\nimport Grid from './Grid/Grid'\nimport Thumb from './Thumb/Thumb'\nimport Spinner from './Spinner/Spinner'\nimport SearchBar from './SearchBar/SearchBar'\nimport Button from './Button/Button'\n\n//Hook\nimport { useHomeFetch } from '../hooks/useHomeFetch'\n\n//image\nimport NoImage from '../images/no_image.jpg'\n\nconst Home = () => {\n    const { state, loading, error, setSearchTerm,setIsLoadingMore} = useHomeFetch()\n\n    //console.log(state)\n\n    if(error) return <div>Somthing Went Wrong...</div>\n\n    return (\n        <>\n            {state.results[0] ? (\n                <HeroImage \n                    image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n                    title={state.results[0].original_title}\n                    text={state.results[0].overview}\n                /> \n             ) : null\n            } \n            <SearchBar setSearchTerm={setSearchTerm}/>\n            <Grid header='Popular Movies'>\n                {state.results.map(movie => (\n                    <Thumb \n                    key={movie.id}\n                    clickable\n                    image= {\n                        movie.poster_path ?\n                        IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path:\n                        NoImage\n                    }\n                    movieId={movie.id}\n                    />\n                ))}\n            </Grid>\n            {loading && <Spinner />}\n            {state.page < state.total_pages && !loading && (\n                <Button text='Load More' callback={() => setIsLoadingMore(true)}/>\n            )}\n        </>\n        \n    )\n}\n\nexport default Home","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 70px;\n  background: var(--medGrey);\n  color: var(--white);\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: var(--maxWidth);\n  padding: 0 20px;\n  span {\n    font-size: 1.2rem;\n    color: var(--white);\n    padding-right: 10px;\n    @media screen and (max-width: 768px) {\n      font-size: 16px;\n    }\n  }\n`;","import  {Link } from 'react-router-dom'\nimport { Wrapper, Content } from './BreadCrumb.Styles'\nimport PropTypes from 'prop-types'\n\nconst BreadCrumb = ({movieTitle}) => {\n    return(\n        <Wrapper>\n            <Content>\n                <Link to='/'>\n                    <span>Home</span>\n                </Link>\n                <span>|</span>\n                <span>{movieTitle}</span>\n            </Content>\n        </Wrapper>\n    )\n}\n\nBreadCrumb.propTypes = {\n    movieTitle: PropTypes.string\n}\n\nexport default BreadCrumb","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const Wrapper = styled.div`\n  background: ${({ backdrop }) =>\n    backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : '#000'};\n  background-size: cover;\n  background-position: center;\n  padding: 40px 20px;\n  animation: animateMovieInfo 1s;\n  @keyframes animateMovieInfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  background: rgba(0, 0, 0, 0.7);\n  border-radius: 20px;\n  @media screen and (max-width: 768px) {\n    display: block;\n    max-height: none;\n  }\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  padding: 20px 40px;\n  color: var(--white);\n  overflow: hidden;\n  .rating-directors {\n    display: flex;\n    justify-content: flex-start;\n  }\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 50%;\n    margin: 0;\n  }\n  .director {\n    margin: 0 0 0 40px;\n    p {\n      margin: 0;\n    }\n  }\n  h1 {\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;","//Components\nimport Thumb from \"../Thumb/Thumb\"\n\n//Config\nimport { IMAGE_BASE_URL,POSTER_SIZE } from \"../../config\"\n//image\nimport NoImage from '../../images/no_image.jpg'\n//styles\nimport { Wrapper , Content, Text } from './MovieInfo.Styles'\n\nconst MovieInfo = ({movie}) => {\n    return(\n        <Wrapper backdrop={movie.backdrop_path}>\n            <Content>\n                <Thumb image= {\n                    movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                    : NoImage\n                }\n                clickable={false}\n                alt='movie-thumb'\n                />\n                <Text>\n                    <h1>{movie.title}</h1>\n                    <h3>PLOT</h3>\n                    <p>{movie.overview}</p>\n                    <div className=\"rating-directors\">\n                        <div>\n                            <h3>RATING</h3>\n                            <div className=\"score\">\n                                {movie.vote_average}\n                            </div>\n                        </div>\n                        <div className=\"director\">\n                            <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n                            {movie.directors.map(director => (\n                                <p key={director.credit_id}>{director.name}</p>\n                            ))}\n                        </div>\n                    </div>\n                </Text>\n            </Content>\n        </Wrapper>\n    )\n}\n\nexport default MovieInfo","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  width: 100%;\n  margin: 0 auto;\n  .column {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--medGrey);\n    border-radius: 20px;\n    margin: 0 20px;\n    flex: 1;\n    :first-child {\n      margin-left: 0;\n    }\n    :last-child {\n      margin-right: 0;\n    }\n  }\n  @media screen and (max-width: 768px) {\n    display: block;\n    .column {\n      margin: 20px 0;\n    }\n  }\n`;\n","//Helpers\n\nimport {calcTime, convertMoney} from '../../helpers'\n//styles\nimport { Wrapper, Content } from './MovieInfoBar.Styles'\n\nconst MovieInfoBar = ({time,budget,revenue}) => {\n    return(\n        <Wrapper>\n            <Content>\n                <div className='column'>\n                    <p>Running time: {calcTime(time)}</p>\n                </div>\n                <div className='column'>\n                    <p>Budget: {convertMoney(budget)}</p>\n                </div>\n                <div className='column'>\n                    <p>Revenue: {convertMoney(revenue)}</p>\n                </div>\n            </Content>\n        </Wrapper>\n    )\n}\n\nexport default MovieInfoBar","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  color: var(--white);\n  background: var(--darkGrey);\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n  h3 {\n    margin: 10px 0 0 0;\n  }\n  p {\n    margin: 5px 0;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 15px;\n`;","import { Wrapper, Image } from \"./Actors.Styles\";\nimport PropTypes from 'prop-types'\n\nconst Actors = ({name, character, imageUrl}) => {\n    return (\n        <Wrapper>\n            <Image src={imageUrl} alt='actor=thumb' />\n            <h3>{name}</h3>\n            <p>{character}</p>\n        </Wrapper>\n    )\n}\n\nActors.propTypes = {\n    name: PropTypes.string,\n    character: PropTypes.string,\n    imageUrl: PropTypes.string\n}\n\nexport default Actors","import { useParams } from 'react-router-dom'\n//config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\"\n//Components\nimport Grid from \"./Grid/Grid\"\nimport Spinner from \"./Spinner/Spinner\"\nimport BreadCrumb from './BreadCrumb/BreadCrumb'\nimport MovieInfo from './MovieInfo/MovieInfo'\nimport MovieInfoBar from './MovieInfoBar/MovieInfoBar'\nimport Actors from './Actors/Actors'\n\n//Hook\nimport { useMovieFetch } from '../hooks/useMovieFetch'\n\n//Image\nimport NoImage from '../images/no_image.jpg'\n\nconst Movie = () => {\n    const { movieId } = useParams()\n    const { state: movie, loading, error} = useMovieFetch(movieId)\n\n    if(loading) return <Spinner />\n    if(error) return <div>Somthing went wrong...</div>\n\n    return (\n        <>\n            <BreadCrumb movieTitle = {movie.original_title} />\n            <MovieInfo movie={movie} />\n            <MovieInfoBar time={movie.runtime} budget={movie.budget} revenue={movie.revenue} />\n            <Grid header='Actors'>\n                {movie.actors.map(actor => (\n                    <Actors key={actor.credit_id} \n                    name={actor.name}\n                    character={actor.character}\n                    imageUrl = {\n                        actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                        : NoImage\n                    }\n                     />\n\n                ))}\n            </Grid>\n        </>\n    )\n}\n\nexport default Movie","import { useState, useEffect } from \"react\";\nimport API from '../API'\n//Helpers\nimport { isPersistedState } from \"../helpers\";\n\nexport const useMovieFetch = movieId => {\n    const [state, setState] = useState({})\n    const [loading, setLoading] = useState(true)\n    const [error,setError] = useState(false)\n\n    useEffect(() => {\n        const fetchMovie = async () => {\n            try {\n                setLoading(true)\n                setError(false)\n\n                const movie = await API.fetchMovie(movieId)\n                const credits = await API.fetchCredits(movieId)\n\n                //Get Directors Only\n                const directors = credits.crew.filter(\n                    member => member.job === 'Director'\n                )\n\n                setState({\n                    ...movie,\n                    actors: credits.cast,\n                    directors\n                })\n\n                setLoading(false)\n\n            }catch (error){\n                setError(true)\n            }\n        }\n\n        const sessionState = isPersistedState(movieId)\n\n        if(sessionState) {\n            setState(sessionState)\n            setLoading(false)\n            return\n        }\n\n        fetchMovie()\n    }, [movieId])\n\n    useEffect(() => {\n        sessionStorage.setItem(movieId, JSON.stringify(state))\n    },[movieId,state])\n\n    return { state, loading, error}\n}","const NotFound = () => {\n    return (\n        <div>NotFound</div>\n    )\n}\n\nexport default NotFound","import React from 'react';\n//Routing\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom' \n//styles\nimport { GlobalStyle } from './GlobalStyle';\nimport Header from './components/Header/Header'\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport NotFound from './components/NotFound';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <Routes>\n        <Route path='/' element={<Home />} />\n        <Route path='/:movieId' element={<Movie />} />\n        <Route path='/*' element={<NotFound />} />\n      </Routes>\n      <GlobalStyle />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}